% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ec_pa_distances.R
\name{ec_pa_distances}
\alias{ec_pa_distances}
\title{Calculate Inter-Protected Area Distances}
\usage{
ec_pa_distances(pa, method = "edge")
}
\arguments{
\item{pa}{sf object containing protected areas, typically the output from
\code{\link[=ec_add_transboundary_pa]{ec_add_transboundary_pa()}}}

\item{method}{Character string specifying the distance calculation method.
Options are:
\itemize{
\item "edge": calculates minimum edge-to-edge distances between PA boundaries
\item "centroid": calculates distances between PA centroids
}
Default is "edge"}
}
\value{
A numeric matrix where element represents the distance in kilometers
between protected area i and protected area j. The matrix is symmetric with
zeros on the diagonal
}
\description{
This function calculates distances between all pairs of protected areas in a dataset.
}
\details{
Edge-to-edge distances are more appropriate for connectivity analysis as they represent
the minimum distance an organism would need to travel between protected areas.
Centroid-to-centroid distances may overestimate actual travel distances, especially
for large or elongated protected areas.
}
\examples{
library(dplyr)
library(sf)

# Benin - treated as single ecoregion
benin <- fiwac \%>\%
  dplyr::filter(ISO3_CODE == "BEN")

# Protected area
prot_area <- pas

# repare data first
prepared_data <- ec_prepare_data(
  pa = prot_area,
  ecoregion = benin,
  min_area = 1
)

# Add transboundary PAs with default 70km buffer
complete_pa <- ec_add_transboundary_pa(prepared_data, buffer_km = 70)

# Calculate edge-to-edge distances
dist_matrix <- ec_pa_distances(complete_pa, method = "edge")
dist_matrix[1:5, 1:5]
}
